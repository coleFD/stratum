# Performs test coverage of project's libraries using cargo-tarpaulin and the message-generator, 
# and generates results using codecov.io.
# The follow flags are used when executing cargo-tarpaulin:
# -- features: Includes the code with the listed features. The following features result in a
#    tarpaulin error and are NOT included: derive, alloc, arbitrary-derive, attributes, and
#    with_serde
# --lib: Only tests the package's library unit tests. Includes protocols, and utils (without the
#   exclude-files flag, it includes this example because it contains a lib.rs file)
# --exclude-files examples/*: Excludes all projects in examples directory (specifically added to
#   ignore examples that that contain a lib.rs file like interop-cpp)
# --timeout 120: If unresponsive for 120 seconds, action will fail
# --fail-under 30: If code coverage is less than 30%, action will fail
# --out Xml: Required for codecov.io to generate coverage result
# All message-generator test flags are in test/message-generator/cov/cov_test.json

name: Test Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tarpaulin-test:

    name: Tarpaulin Test
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop-nightly
      options: --security-opt seccomp=unconfined
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --verbose --features prop_test noise_sv2 fuzz with_buffer_pool async_std debug tokio with_tokio derive_codec_sv2 binary_codec_sv2 default core --lib --exclude-files examples/*,utils/message-generator/* --timeout 120 --fail-under 30 --out Xml

      - name: Archive Tarpaulin code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: tarpaulin-coverage-report
          path: cobertura.xml

  message-generator-test:
    needs: tarpaulin-test

    name: MG Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          override: true
          components: llvm-tools-preview

      - name: Log data from rustc
        run: rustc -Vv

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Run mg codecov tests
        run: sh ./mg-codecov-tests.sh

      - name: Open file
        run: head -n 20 target/cobertura.xml | cat

      - name: Archive MG code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: mg-coverage-report
          path: target/cobertura.xml

  codecov:
    needs: message-generator-test

    name: Codecov Upload
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          files: ./tarpaulin-coverage-report/cobertura.xml,./mg-coverage-report/cobertura.xml
          fail_ci_if_error: true
